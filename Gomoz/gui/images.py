from wx import ImageFromStream, BitmapFromImage
import cStringIO, zlib


def getNewData():
    return zlib.decompress(
"x\xda\x01m\x02\x92\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x14\
\x00\x00\x00\x14\x08\x06\x00\x00\x00\x8d\x89\x1d\r\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x02$IDAT8\x8d\xd5\x94=hSQ\x18\x86\x9fs\x0cU\
\xea\x90D+\x12\x8d\xd2?)\x8a\xb4)\x96\n\x19\xb4\x14\x1cL\x87\x8a\xab\n*\x8aC\
E\\\x82\x82\xc9$\x0ej\xc4\xb5\x83C\x17\xcd\xd0\xa64\xa88\x14\xe3`B\xa3\xa4\
\x96\\3\xd48$\x0e\xe9\xb5jisM\x93@\xd2\xd6\xc5\x84\xa4\xf9\xa9\x11\x17_\xf8\
\xe0\\xy\xce\xf7\x9e\xf3\xdd\x03\xff\x93\x1e\x03\x1b\x7fY\xc3\x05\x88\xae\
\x04h\xf1x<X\xadV\x84\x10\x7f\\~\xbf\x1f\x9b\xcdf\x01\xbc\x9b\x81\x08!\x90R6\
\x04\x14B\x94\xc5,\x03J)\xeb\x025M\xc3\xe1\xba\xc3\x9b\x05\x1f}{\xfa\xb1_\
\xb0W\x00e\xb5\x0ek\x95\xc3\xe5@\xe9\r\xd3}\xc5B\xf8\xf8,\x97\x1f\\BJY\x1bX\
\x0f&\xa5DM/p\xaaw\x88\xf3\xfdWi\xdb\xdd\xc9\xf2\x81%\x14Ei\xacCM\xd3\xb8\
\xee\x18\xc1|n\x1fs\x1b\x1f04\xef*\xfa\x9b\x0e6q\xcf\x7f\x97\xe6\xee\x1d\x17\
\x81\x9e-\xcf\x10`tl\x94o'\xbfc\x1fq\x02`\xd2\xef\x07`\xe8\xe8Y\x06\xbb2dm\
\x19<sO[c\xf7\xe3Si%\xdbV\xf3\x96\x0b\xdf\xef\xbe\x04\xd9{\xc2D{\xcb\xa1\xb2\
h&\xbd\xb9\xb8~\xfd\xe9\x15\xdb\xdb\xd5\xd6\xb4\x92\xad\x1c\x9b\xcdu\xd8x\
\x04\xef\xc7I\xd4d\xa2\xd8\x99Io\xe6e\xc4\x83\x9aL\x90\xc9e\xf8\xaa%\xc8-\
\xe6\xe3\x15\x91\xab\xcd\xa1\xd3\xee$r-\xc2\xecZ\x08]\x8b\x8e\xc1\xae\xd3\
\x00\xa8\xc9\x04\xd1\xf9y~\xfaS\xe4\x16\xf3\xf1\xd4\xcc\xea\x99-oY\x08\x81\
\xd1hdz|\x9a\xa5\xc9e\x8e\xe9\xfa\xc8\xe62E\x7f\xfeG\x9e\x1b=7I\xcd\xac\x8e\
\x01\xe1\x9a\x1d\x96\xc6/\xac\x01\xcc;\xcd<\x7f?A\xac\xe33j2A.\xb0\xc6\xfa\
\xc0z\xd9\xd9V\x8cM\xb5\xd8\x05=t\xb8\xe8x\xdb\xc9\x8bG^\xc4\xb3m\xdc\x1a\
\xbeM0\x18\x04\x88\x17<\x15cS\xed\xff,\xc8`00\xfed\x82P(\x84\xaa\xaa(\x8aB \
\x10X\x01\xa6\xaa\x02K\xe3\xd5\x92\xa2(D\xa3Q|>\x1fn\xb7{%\x9dN\x0f\x00\xc9j\
\xdeF\xde\xc3\xd8o\xbf\xbe\xee\xee\xffB\xbf\x00;\x9f\xce\x91S> \xf3\x00\x00\
\x00\x00IEND\xaeB`\x82\x07\xac\x19\x0c" )

def getNewBitmap():
    return BitmapFromImage(getNewImage())

def getNewImage():
    stream = cStringIO.StringIO(getNewData())
    return ImageFromStream(stream)
#-------------------------------------------------------------------------
def getOpenData():
    return zlib.decompress(
'x\xda\x01\x8a\x02u\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x14\
\x00\x00\x00\x14\x08\x06\x00\x00\x00\x8d\x89\x1d\r\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x02AIDAT8\x8d\xcd\x94Ak\x13Q\x14\x85\xbfi\xa6\
\x08\x15\xcd\x88\x82\xba\x91V\x14t\xd1\x9a]\x17"\x95\xaa \xb8\xb0\xee\\\x08A\
w\x82h\xfe\x81\xe9\x1f\x90Z)\xb8\xd4E\xf7\xd5\x85P\x14iQQ\xc1\xd6\x86Z\xa8-H\
RJ\x1b[\xdb4\xc9L\xe2$\xf3\xdeu1\x93d\x12Z\xa9\x08\xe2e\x86s9\xbc{\xe6\x1e\
\xdea\xe0\x7f/#\xc0\xfb@\x0c\x98\t\xd0\n\xf81\xe0\xe1\x9f\n\xc6\xe3\xf1\xf8\
\x93\x1b\x97\xbb0<\x07\xa3\xcd\xc0\xc0@Dx\xf6r\x9a\xe1\xa7\xaf\x92\xc0\xe0n\
\x05M\xc0\xea\xec\xec\xa4\xbf\xf7\x04\xa2\\\xb4\x16D\x0bZ\x0b\xa7\x8f\x1fez.\
\x93|\xfbi1\xb9\xc3\xfc\x16\x90\x0c\xbb0\x03\x9bx\xc6~\x94\xbb\xd2\x10\x14\
\xa1cO;\xcf\x1f\xdfE\xb4 \xe2\x7fD\xa4\xf1n\x15J\xd6\xa5[\x0f\x86\x96\xb3\
\xb91 S\x13\x04\x84\xaa\xa7p\xcb.\xa5\xb2\x13\x1a\x02B}+\x1fi\x83k\x17zx4:\
\x99\x00\x86\x80\x8c\t\x90N\xa7\xf1\xaa\xdd|]\x9c\xc5v\xaatX\x87\xb7\xf5\xe7\
U\xaa\x14\xf2E\x94\xd2xJ\xe3y\x9a\xbd\xfb\xa2\xf4\xf5\x9dKlm\xac\'R_\xe6\x13\
uA\xdb.\xb2\x99s\xe8\xbf>H\xbb\x97C\x08\xb6\x0b\xd0\xf7!\xf8\x8f\x8f \\\x15\
\xf0\xecU\xde|\x9c\xe3J<9`\x02XV\x14\xdb)r\xf0X/\xe4\x17(\xe53\x88\x04\xc3a\
\xcb>\x11\xb2OpN\x98\x9a\xfa\x0c0a\x02\xc4bg\xd8\xf8\xb1\xc6\x91S\x17q\xbe\
\xa7\x10\xa4e $\\\xdb<\xd80X\x9e\x17\x93\xb3\x00c\xf5K)\xe6m\xba\xda\xe1\xa7\
[i\xb1\xd5(\x91\x16"\xa8\x82]\xe6C\xea[\x1aH\xb5\xd5\xc8lv\x8d\xe8\x81Ch\xa5\
\xd1Z\xd7\xa3\xe2\xc7%\xe0B\xbd\xd6\n\xa5\x14Jy\xcc.,\x03L4\xc5&bF\xa8\x14\
\xd7\xd0Z\x87\xac\x84q\xe7\xfe\xdd\xf4"\xb5<\x9b\xc0\xf9XO7\xf3\xaf\xdf\xe3\
\xda\x9bT\xab\x95\xa6\xf0\xfaVu\x13\xd7\x08\xb9\xcf/\xadl4\tbYQN\xf6\x9c\xc5\
)\xacS.\x97\x9a\xac\xfa\xbd\xae\x0b4P\xd7qi\xb5Ypfhx\x84;\xb7o2>>\xda"\xf4;1\
\xff\x9c]rI-d\xd3@\x1e\x1a\xbf\xaf{\xc0\xc0\xb6W\xb8\xbbJ\x00\xa9\xbf\x98\
\xff\x87\xf5\x0b^\x04\xf1O8\xd9]\x1b\x00\x00\x00\x00IEND\xaeB`\x82Y\xd7)v' )

def getOpenBitmap():
    return BitmapFromImage(getOpenImage())

def getOpenImage():
    stream = cStringIO.StringIO(getOpenData())
    return ImageFromStream(stream)
#----------------------------------------------------------------------------
def getSaveData():
    return zlib.decompress(
'x\xda\x01u\x02\x8a\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x14\
\x00\x00\x00\x14\x08\x06\x00\x00\x00\x8d\x89\x1d\r\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x02,IDAT8\x8d\xd5\x94Mk\x13Q\x14\x86\x9f|\x99\
T\x93*m\xadP\\\xa4\x04Am@*\x88\x8a\x82K7"\xad\x16\x11Wv\xe5\xda\x1f\xa0\xa2\
\xe8ZW~\x10\x84\xfe\x007\x96\x16Z\x11\x89 jE\xc4\x10h\xb5\x8a\x14\x946\x89\
\xed$615\xe5\x9e{]Lg\x92\xa1\x9d"\xae\xf4\xc0a\x86\xb9\xe7>\xf7\xbd\xef9\x0c\
\xfcOq\x1b0\x7f\x91e\xe0\x9a\x03\t\xb4\x00\xcd\xc0\xb9[\xfc\xb0f\xd8\x93\xea\
d\xf0\xec\x05\xff\xa3\x8d\xfd\x98\xfd\xb4\xc0\x93\xa7\xafy\xf7\xe6\x11\x0b\
\xf3\x9fG\x80\xe1pk\xdd\xf6\xf6\x08CCW\x88\x86\x179vd\x1f\x89D\xc2\xdeo\x0c\
\xc6\x18D\x04\xad\xb5\xfb\x8c\xc7;\xa8\xfe\xdcJ\xff\xc1\xe3\xdc\xbcz\xea"0\
\x1c\xf4\x1c\xac5\xcf&\xef\x92\xea\xed\xf6\xc0\xb4\xd6(\xa5\xd6\xe5ru\x85\
\xb9//\xb1\x8a/\\\x86G\xa1\xd6\xc2\x89\x93\x97\x08\x84\xda=0\x11q\xb3U\xa1\
\x88\xd0\xb5\xab\x1f\x11\xf1\x07\xda\xc5\xcd+\xb6nv\xde\x9bi\x7fS\xca\x07(\
\xa2<j\xfcTi\xad\xd7\x0e\xd4(%\x88(\x7f\x85v\x81?\xd0\xc9\xa6\x1d\xca\xa3\
\xd0\xd3\x14g\xf1O`\xb6\x00\xed\xd6o\xea\xe1\xf4\x87\xef4\x1a\xab\xeb\xfc\
\x13\xb1}\xd3\xdaV\x97\xcb\xcf\xbbk\x9bzX\xae4\x98z[\xc5\xb2\xca\xe4\xdfOb\
\xb4\xb2g\x91\xe6L\x12\xec\xc2\xb0\x85\x9e\x9e\xddD"\xd1\x8d\xaf\xac\xc5\x9e\
/\xa7s}{;\x18\x1f\xbd\xc7\x99\x81\xc3<\xcc\xdc`|\xf4\x01c\x8f\xef3x\xfa\x10+\
\xb5\x8f`\x02\x94-\xcbW\xe1\\\xad\xb6\x98t`"B(\x18bii\x89L&\xc3\xfe\xbe\xa3\
\xaeo\xc9d\x92p(@4\x16C\x1b\xe3\xdb\x94\x81\xa9Wc\x95o_g]_\xaa\xb5\x1a\xc5b\
\x11\x80jm\x99R\xa9D\xa9T\xa2R\xa9\x10\x8e\x84h\x8bE1k\x1e;\x11j\x01\x16\x95\
Z\x9d\xc8\xe7\x9e\x9f\xefM\xf5\xc7\x1a\x8d_\xa0-\xbawnCD\xe8\xec\x88\xa3\xb5\
\xa6^\xafS(\x14\xc8\xe5fl\x1fM\x80X\xac\x8d\xe9\xfc\x04\xc0\xf5\xd6\xbf\x8d\
\x13\x07\x80\x11`G:\x9dN\xa6\xd3iwL\x9c\x86X\x96E6\x9b\xf5(\x03\xee\x00\x977\
\xe0\xfdc\xf1\x1b\xf0}\ndl.9\x95\x00\x00\x00\x00IEND\xaeB`\x82\xf3\x99%\x80'\
 )

def getSaveBitmap():
    return BitmapFromImage(getSaveImage())

def getSaveImage():
    stream = cStringIO.StringIO(getSaveData())
    return ImageFromStream(stream)
#----------------------------------------------------------------------------
def getSaveAsData():
    return zlib.decompress(
'x\xda\x01%\x03\xda\xfc\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x14\
\x00\x00\x00\x14\x08\x06\x00\x00\x00\x8d\x89\x1d\r\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x02\xdcIDAT8\x8d\xd5\x92KH\x94Q\x14\xc7\x7f\
\x8e\xda@\x8c6\x99H\x05i\xd3\x83,\'z?@0sQ\xb4\x89\xe9A\x8b\x88\x8a6A\x1b)\
\x8a \x88\xb1\xa2EH\xd4"\xcb\x90\xa4@0)\xc2,C{\x115bRT&=h\xeca\xafqf\xbe\x99\
Q\xe7\xab\x9c\x9a{o\x8b\xd1\xaf\xf9\xd4Z\xd4\xaa\x03\x87s\xb9\x9c\xfb;\xffs\
\xee\x81\xff\xc5\x8e\x01\xea/<\x02\xb8\x93A)\x03Q\xb96\x1c\xa67\xfc\x82\xe9S\
\xc7\xb1f\xdd\xc6\xdf\x97V\x89\xf0\xca\xeb\xe3\xfa\xcd\xfb<h\xad#\xe0\x7f[\
\x0f\x94\x01\xedi\x83yc2\xd3Y\xbf~?\xd64\x8d\xc2\xa53\xc9\xc8\xc8H\xbcW\n\
\xa5\x14B\x08\xa4\x94F\xb4\xd9\xb2\xf0\xbe\xee\xe6\xfe\r\x8d\x1d3\xc7\xbb\
\x9e\x06\xa3.\x8f\xf6\xa5\xccb\x14\x96\x92\xdb\xcd\'\x99\xea\xc81\xc1\xa4\
\x94\xc4\xe3\xf1a\xde\x17\xfd\xc6\x85\xdaC\xec[\\\xc0\xdeE\xb9\x94N\xc9\x06(\
6\x14J)X\xb6r;)\xa9\x99&\x98\x10\xc2\xf0d\x85\xcd\xd7\xce\xb2\xac\xa8\x10\
\x9b\x1e\xa5\xae\xf1.]$P&`"\xf9W\x8b\xc9\x90\xc1\xf3\xa0\xdf\xba\xd5\xcc\xe1\
Cn\xf8\xa1\x88\x158ikj\x82P\xc7\x1d\xa3e!\xe2&5C=\x19\xec\xf1x\xc8\xb6\t\xf2\
\'H\xb0Z\x19=c\x06\x0f;:z\x80\x03&\x85\xf1\xf8\xefA\xc9\xea\xca\xcb\xcb\xd9\
\xbd\xb9\x98\x9a\xdaK\xac\x9a\x9b\xce\xb6]\x17\x01\xb6\x9aZ\x16">\x0c8\x12\
\xac\xa5\xa5\x85Q2L\xaec\x16v\xc7\x04j\xaa\xcb\x08\xf7\xc5\x00.\x8f8\xc3\xe7\
/\x83\xc4b\xdf\x87\xb5)\x84DJ\x81\xdb\xed\xe6R\xf9\x1a:\xbd\x1e\xb4\xde(\xe7\
\xaf{MkjR(\x84 \xd2\x13\xa3\xeda\x94p8B\xc7\x93f\x94\x8c\'v\x11\xe8\xf6u\xb1\
0\xdfNN\xba\xc6\xb8)\xb0\xab\xb2\x93\xdci+\x89<\xbab\x00\x8dO\x91"\xb1_B$fY\
\x90\x9fEc\xc3)\xd6\xba\x96p\xa6\xea \x8d\r\xa7\x89\xf6\xbea\xef\xa6y|\xef\
\xf3\xf1\xa43@\xfd\xddn\xf2g-7)\x1c\x04\xbe\xd3u\xcd\x80\t!H\xb5(B\xa1\x10UU\
U\xbc\xeb\x8aPQQ\xc1\xea\xa2\xc9\xd8\xfb_\xd0\xaf\xf7r\xa2\xfe\r\x93\x1c\x85\
XR\xad#\x02]m\xadW{>~xe\xcc,\xaa\xeb\xf8\xfd~\x00\xa2z\x1f\xc7\x8e\x1e\xa1\
\xd4\x95\xcb\x0f=\xc8\xd3\xf7_\xb9\xf9 \xc8\xf8\x89\xf3\x10B\x8c\x08l\xef\
\xff\xa6\x17W\x9f\xde\xd3\xf3\xe9\xa3\x97\x90\xe6#\xe0\xff\x80\xa6i\x94\x94\
\x94\xd0\xfe\xf8\x1e\x13\xb3\xadd9\xe6\xf3\xd5^@eS\x90\xb19\x0b\xb0X\xd2QJ\
\x99\x80)\x98m\x0ep\x16\xb0;\x9d\xce\xc9N\xa7\x13\xa5\x14\x81@\x00_\xd73\xce\
\x1dY\xcb3\xefg\xb6\xedk\x18\xf2\x8c\xe3\xc0\xce\xa1\x97\x7f\xb2-yyyjE\xd1le\
\x1b=*2P\xf8\x9f\xac\xd4j\xb5*\xe01\x90\xf7\xa7\xc4\x9f\x07\x1e\r|\x88\x00\
\x7f\xd2\x00\x00\x00\x00IEND\xaeB`\x82\xda\x9c\x82\x97' )

def getSaveAsBitmap():
    return BitmapFromImage(getSaveAsImage())

def getSaveAsImage():
    stream = cStringIO.StringIO(getSaveAsData())
    return ImageFromStream(stream)
#--------------------------------------------------------------------------
def getExecData():
    return zlib.decompress(
'x\xda\x01e\x03\x9a\xfc\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x14\
\x00\x00\x00\x14\x08\x06\x00\x00\x00\x8d\x89\x1d\r\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x03\x1cIDAT8\x8d\xcd\x94=HcY\x14\xc7\x7f\xef=\
\xf3bb\xd4\x87\x1f$\xa8\xb0S$q\x0b?\xe2\x07\x1aA0\xa2\x84\x10RXn!d\x05\x8b)\
\x84\x1dD\xecd-\x17\x9b%\xb5\xc5\x0ev\x0b\x82\xae`\xb1\x95Y\x11e\x1b\xc9`\
\xb3\x04\xd1\xd8\x98\xf8\x85\x86\xe8{y7\x9a\xb7\xc5\xa8\xe88\x8c;0\xc5\x1e\
\xb8\x9c{\xb9\x9c\xdf\xf9\x9f{.\x07\xfe\xef&\xbdr\xff\x130\xf6\xe4\xfc\x0e\
\xf8\xf0\xb5I:\x81\xdf\xee\xfde"\x91\xb0\xd6\xd7\xd7\xad\xd9\xd9Y\xcb\xe1p\
\x1c\x02?\xdf\xaf\xcf\x9a\xf2)\xcc\xe5r%\xa7\xa7\xa7\x83\xa9T\xea\x07!\x8466\
6FSS\x13\xbd\xbd\xbdH\x92\xa4Y\x96\x15\xf2x<\xa1l6\xfb\x06\xf8\xe3\x8b@\xa7\
\xd3\xf9\xcf\xfc\xfc\xbc\xd6\xd1\xd1A___e{{;\x17\x17\x17\x8c\x8f\x8fS__\x8f\
\xdb\xed\xa6X,\x12\x0c\x06\x11B\x042\x99\xcc\x0b\xe83\xa0\xcdf{\x1b\x08\x04\
\xb4\xfe\xfe~FFF\xb0\xdb\xedx\xbd^\x9a\x9b\x9b\x91e\x19\x97\xcb\x85,\xcb\x0c\
\x0c\x0c0::\xca\xd1\xd1Q`\x7f\x7f\xff\n\xf8\xfb\x81!?\xe1\xc5u]O-..R[[\x8b\
\x10\x02\x9f\xcf\x87\xdf\xef\xa7T*\x01\xe0p8\x18\x1c\x1c\xa4\xaa\xaa\nY\x96\
\xf1\xfb\xfd\x00\xa1\xa7\xa2\x1e\x80\x9d\x1e\x8f\xe7}<\x1e\x1f\x9b\x9c\x9cdi\
i\tI\x92\x90e\x19EQ\xc8\xe7\xf3lnn>\x06Y\x96\xc5\xf1\xf11[[[\xa8\xaa\x1a\xe2\
c\x03\x9f\x01\xb5\xba\xba:\xa2\xd1(mmmtvv\xa2\xaa*\xd5\xd5\xd5$\x93I\xba\xbb\
\xbb3\x91H$511\x81\xae\xeb\xdc\xdd\xdd\xe1v\xbb\x89D"\xc4\xe3q\r\x98\x7fQ\
\xb2a\x18\xe4\xf3yb\xb1\x18\xd1h\x14EQ\xb0\xdb\xed,,,pyy\x19\x022\xb7\xb7\
\xb7\xec\xec\xec \x84\xa0T*\x11\n\x85\x88D"\x00\xda\x03\xa7\xe2\xde\xffuxx\
\x98I\xa7\xd3oL\xd3\xc4\xb2,\x14EA\x92$\x1a\x1a\x1ap8\x1c\x99\xa1\xa1!\xba\
\xba\xba(\x95J\x14\x8bEL\xd3D\x08\x81\x10\xe2\xe9\x13>\xebrroo\xef\xed\xc1\
\xc1\x01\xd7\xd7\xd7\xb4\xb6\xb6R.\x97\t\x87\xc3\xf8|><\x1e\x0f\x95\x95\x95\
\xf4\xf4\xf4`\x9a&\xba\xae333\xc3\xc6\xc6\x06\xe7\xe7\xe7)\xe0\xf7\xa7\n\x01\
>\xa8\xaa\x8a\xd7\xeb%\x9b\xcdR(\x14P\x14\x85\x8a\x8a\n\x86\x87\x87\xc9\xe5r\
h\x9a\x86\xae\xeb\xe8\xbaN&\x93!\x9dN#\x84x\x07$>\xa7\x10\xc30\xb4B\xa1\x10\
\x9c\x9a\x9a\xa2\\.c\x9a\xe6cy\x8a\xa2<\xc2nnn\x90$\x89\x9a\x9a\x1avww\x8b\
\x0f\xea^\x00\x81?s\xb9\\\xa0\xb1\xb1\xf1\xfb\x96\x96\x16\xd6\xd6\xd60\x0c\
\x03\xa7\xd3\x89a\x18\x9c\x9d\x9d\x91H$p\xb9\\\xd8l6VVV899\xf9\x85W\x06F-\
\xb0\x11\x0c\x06-\xc0\n\x87\xc3\xd6\xea\xea\xaa\xb5\xbc\xbcl\xcd\xcd\xcdY\
\xc0\x8a\xd3\xe9\xbc\xf4\xf9|\x16\xf0\xeb\xa7\xc1_\x1a_C\xc0\x95\xaa\xaa\xc9\
X,\xa6\x95\xcbeNOO\xd9\xde\xde\x9e\x07\xde\xf3\xf1\xab\xbcP\xf6\xda<\x04\xf8\
\x0e\xf8\xf1~\x7fu\x0f\xcb\xff\x87\xb8oc\xff\x02~\\8o\xd2\xed\xf9\xab\x00\
\x00\x00\x00IEND\xaeB`\x82g>\x97\x93' )

def getExecBitmap():
    return BitmapFromImage(getExecImage())

def getExecImage():
    stream = cStringIO.StringIO(getExecData())
    return ImageFromStream(stream)
#------------------------------------------------------------------------
def getQuitData():
    return zlib.decompress(
'x\xda\x01n\x03\x91\xfc\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x14\
\x00\x00\x00\x14\x08\x06\x00\x00\x00\x8d\x89\x1d\r\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x03%IDAT8\x8d\xcd\x94\xc1k\x1cU\x1c\xc7?3;o&\
\xb33\xbbo\xa6\xea\x96b\xb5\xa1\x17+\x82;xQ\x10\x92x\xf1Pz\x08x\xf0\xe2a\x0b\
\x9e\xc4C\xf0\xe6\xa9\xed\x7f\xa0\xd7^v\x16<H\x0f6\xa1\xa0\xf1`\x180B\xeb%\
\xbb(BJ\r\x1b\xb1\x1aL\x9an\x93\x9d\xdd\xcc\xcc\xce>\x0f\xd9\xdd6M\x0e\xf1\
\xe6\x17\x1e\xef\xf1\x1e\xdf\xcf\xef\xf7{?\xde\x83\xff\xbb\xb4\x13\xf6\xae\
\xfd\x07\x7f\xf4\xcc\xba\rl\x9e\x04T\x1f\xbcc!\x84\xc0\xb2,\x84e\xb2\xfddH:\
\x18\x85W0\x1c\x0e\xc9\xf3\x9c\x07\x0fc\xda[\xc9\xd8w\x1d\xb8a<\x03\x9a\x05\
\x9a\x00\x17\xcf\xd98\xaeC\xd1q\xb0m\x1bs\xcaB\x18\x06\x9a\xae\xa3\x86C\xb2\
\xc1\x80\xf4 \xe1\xce\xeaC\xda[\xe9a\x94\x91t@\x02\xb7ggg\xa3q\tE\xc7\xc1q]J\
\xe5\x12e)\x91\x9e\x87\xf4}|\xdfG\xfa>\xd2\xf3(K\x89iY\xc7\xca\xd3\x81\xa8^\
\xaf\xcfGQ\xc4\xda\xdaZ \xa5\xa4\xd3\xd7q\xdc\xa7P)%\xd2\x93\x94\xbd\xc3YJI\
\xa9\\\xc2\xb4\xcc\xe3\xc0j\xb5\x1a\xd4j5\x00\x82  \x8a"n\xad\xc6l?\x19Rt\
\x8a8%\x17\xbbh#\x84\xa0P( \x84\xc0.\xda8%\x17S\x88\xe3\xc0V\xab\x15\xce\xcf\
\xcf\xd3\xe9t&\xd0o\x97\x7f\xe0\x9b{\x8a\x9fZ\xff`\x9a&\x9a\xa6\xb1\xbb\xd5\
\xa1\xe8\xbf\x8b\xa9\xce\xb2\xb9\xd6\xc24M\n\xc6\t@\xe0\xea\xd2\xd2Rmnn\xee\
\x084\x8a"VZ\x03\xbe_\xdd\x00\xc0\xb4*\x043Wx\xbd\xfa\x06\xde\xf0/t]\xc70\
\x0c\x84\x98B\xd7\x8d#@\x80\xc5V\xab\xd5\x0e\xc3pr\xe0y\x1ea\x18\xb2\xfc\xe3\
\x03\x00:\x7f\xaf\xb3{\xef\x0b\xb6\x7f\xbe\xc9\xc6\x1f;\x87f\xdd\xc0\xb6\xcb\
\x08a1n\xa8\x01T\x81\xb0^\xafO\x8f\xef\x12\xa0\xd9lr\xe5\xf2\xfb\xdc\xf8\xe4\
m\x00\x9c\x17%\xcb\xb7\xbf&\xee\'\x9c\xad\xce\xa1\x94\xe2\x97\xfb;L\xd9e\xf2\
<#Ib\x00\x0c\xdf\xf7\xa3\x95\x95\x15/\x08\x82\t,\x0cC\xae}\xfe)\x9f}\xf4\x16\
\x17\xce\xb9(\xa5\xf0+g\xf0+\xef\x01\xa0\x94"KS\xd0t\xa6\xec2I\xd2\x9dx\x8d\
\x99\x99\x99#\xb0\x85\x85\x05\xee\xdc\xba\xc9\xc2\x87\xafQ\xf1\x0c\xba\xdd.\
\xc5\xa2\x830\x05\x9a\xa6\x8d`\x19\xbd^\x8cR`\xdb\x92\xb8\xfbh\xe2/\xac\xaf\
\xafO\xb7\xdb\xed \x08\x02j\xb5\x1a\xdf-~\xc5\xc7\x97+\x98\xa20\xc9&\xcfs\
\x06YF\x96\xa6\x1c\xf4\x0f\xe8\xf5z\xf4\xe2\x98\xbb\xbf\xeeQ\x98z\x95^\xafC\
\xdc\xdd\t\x81M\x03\xb8\xdah4\x9a\x8dF\xe3:\xb0x\xfe\x05\xbd\xd6\x8b\xe3I6\
\xf9`@\x92$\x08C\xa0\xe9\x1aj\xa8\xc8\x06\x19\xbf\xfd\xbe\x8bnx\x08\xbb\x8ca\
<}1\xe3~\x7f9\x1a\xb3JQK\x0e\x92\x11,\'MS\xfe\xdc\xc8y\xb4_`/-\xd3\xcd\xce\
\xf0\xb8/q\xddK\xb8/\xb9(\xc0\x10\xc7\x81\x13\xed\xf5\x15w\xefg\xec\xf5\x13v\
\xf6\xf7\xc9\x8d\xf3\xbc\xfc\xca\x9b\xd8\xb6d\xfc\t\xd86\xe4yF\x1c?\x06\x14Y\
\xda\x9f\xf8\x9f\xff\xbe.\x005N\xa7\xe9\xd1\x98\xf4\x13h\x9d\xd2{z\xfd\x0b\'\
\xbf=F\x97\xf6\xf2\xf6\x00\x00\x00\x00IEND\xaeB`\x82\x90\xe8\xa5\xf7' )

def getQuitBitmap():
    return BitmapFromImage(getQuitImage())

def getQuitImage():
    stream = cStringIO.StringIO(getQuitData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getplayData():
    return zlib.decompress(
'x\xda\x01F\x01\xb9\xfe\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x18\
\x00\x00\x00\x18\x08\x06\x00\x00\x00\xe0w=\xf8\x00\x00\x00\x04sBIT\x08\x08\
\x08\x08|\x08d\x88\x00\x00\x00\xfdIDATH\x89\xed\xd2A.CQ\x14\xc6\xf1\xffs\xce\
\xed\xe3\xde\x97\x97\xd6\xa0l\xa0BP\xf4\x99\x10{\xb0\x0c\t\x06\x98b\t\xc2\
\x16$\xacC\xc2\xb4\xfb\xb0\x8cc \x1d\xb6=\xf7\xa5\x9d\xf5\x1b\x9f|\xbfs\x92\
\x03\xab\xcc\x898f.\x81\n\xf8m\x03\xac9f\xb6\x811\xd0,\x0b\x98\xa4\x15\xe2\
\x06\x1e\xee\xefZ!n`#Fno\xae\xb3\x117\xa0"\x1c\x0e\x0fx~z\xccB\xdc\x80\x88\
\xa0\xa24\xcd\to\xaf/n\xc4\x7f\x81\n\xaa\x8aj`g0\xe0\xf3\xe3\xdd\x85\xe4]\
\xa0BPA\x83\xb2\xd5\xef\xf3\xf3\xfd\x05063\x9b\xbaX\x1e\xa0h\x08\xac\x97%)U\
\x1c\x8fN13\x8a\xa2(\x16\x02T\xa9"\xc6HJ\x89\xe1\xd1hny\x16P\xd75*B\xaf\xb7\
\xc9\xee\xde\xbe\xab\x1c2\xdf\xb4\xeev\xb3\xca\xb3\x80N\xd9\xe1\xec\xfc"\xab\
\xdc\x9b+\xc0\x00\x9b\xf5-\xd3\xe2\xb9 \xf1\xdf\xbe\xf0\xcd\'i\xdal\xee\xce2\
\xbbW\x01\xe0\x0f.\xfa=cG%\x88n\x00\x00\x00\x00IEND\xaeB`\x821q\x8c\xc2' )

def getplayBitmap():
    return BitmapFromImage(getplayImage())

def getplayImage():
    stream = cStringIO.StringIO(getplayData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getstopData():
    return zlib.decompress(
'x\xda\xeb\x0c\xf0s\xe7\xe5\x92\xe2b``\xe0\xf5\xf4p\t\x02\xd2\x12 \xcc\xc1\
\x06$\x1f\x94\xdb\xfe\x00R,\xc5N\x9e!\x1c@P\xc3\x91\xd2\x01\xe4_\xf7tq\x0c\
\xf1\xe8|;\xc5\x97\xaf\xc9@\xc0M\xfe\xcc\x15\xf96\x05\x95*\x86\xc5\xd1\xe6r\
\xbefU"\xfe\xcf\x8fE\xafx\xd1\xd6\x1b%\xc2\x92\xe4S\xe39y\xd9\xdfe\xebs/\x1d\
\x9a\x9f/\\q\xec\xd9\x81%o\xac\x1f\xb0\xb8\x1c\xd8z&^\xfe\x13\x97L\xa3s\xec\
\xcb]1K\x02\xb5+\xa3|l\x9b\x04\x14\xce\x9b\xa7D\xb6\xad\xd2/:_\xb6{\xf5\x9c\
\xd5k\xcc\x8c\xa7u\xb3>?\xfdt\xed\x03Q\xfd\xed\xe1"\xac\x91\xb3\xca\xf44\x18\
\xda\x9a\x19W5\xcd,\xd5cP\xe8\xe3}.3\xd1u-K\xe2\xeaWR!q\x17s\xccT\xfbz3\xfe4\
\xab3$\x98H-R\xf2xQ\xfd\xe6-K:\x83\xa8k(\xa7\xab\x958\x0b\x83\x92\xd3$\x15\
\x8b\xe7Q\x9c5k^\xfc\xd4\xb7\xfa\xd5dz\xa3>\xe8J\xc7.\xf5\x15<\xff_\xb6J\xaf\
\xc9s\x93\xda:\xfb]=\xd0\x8b\x0c\x9e\xae~.\xeb\x9c\x12\x9a\x00[\xafmP' )

def getstopBitmap():
    return BitmapFromImage(getstopImage())

def getstopImage():
    stream = cStringIO.StringIO(getstopData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getpauseData():
    return zlib.decompress(
"x\xda\x018\x01\xc7\xfe\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x18\
\x00\x00\x00\x18\x08\x06\x00\x00\x00\xe0w=\xf8\x00\x00\x00\x04sBIT\x08\x08\
\x08\x08|\x08d\x88\x00\x00\x00\xefIDATH\x89\xed\x941n\xc20\x14@_\xe2oH\xe3(%\
\x12\x1c\x00\xd1\xb5K\x8fV\x16z\x94n\xbdY\x17\x8e\x90\x11\xfc\xbb\xa0\x8a@>\
\xb2\xabT,<\xc9R\xf2\xbe\x94\x17{0<\xb87\x85\xe1\xd7\xc0\xf3\xe9\xd9\x03\x15\
\xb0?\xbd_yU\xfd.\n\xebS\xe3\xbc\x01z\xb9T\xf5\xca\x9d\xf9Q\xc4\xf0%\xc0v\
\xfbN\xd7u\x88\x08\xbb\xdd\xc7\xef\xd0\xf29\x01\x00B\x08\xbcl6\x1c\x8e\xc7$o\
\xfe\xe9-b\x8ct\x8bE\xb2O\rD\x80\xf9l\x86\x88#\x840\x18Z>'\x00@\xd3\x04\xbc\
\xf7\xd4\xa1N\xf2\xd9\x81)\xb8[ \x02\xacVK\x9a&P?\r\x8f\xc2\xf29\x81\xc9\xb8\
\x19\xa8\xaa9\xe2\x1c\xae,\x92|N\xe0\x00 N\x10\x11J\xe7\x06C\xcb\xe7\x04\n\
\x00\xe7\x1cm\xdb\xe2\xbd\x1f\x0c-\x9f\xc3+\x13]v\xd6\x0e\xf6\xaa\xca\xe5\
\xea\xfb\xfek\xcc\x03\x9f\x7f\xde\xca\x83\x7f\xe7\x07\xefJf\xb5\xf6\xaa\x0bP\
\x00\x00\x00\x00IEND\xaeB`\x82js\x82\xb5" )

def getpauseBitmap():
    return BitmapFromImage(getpauseImage())

def getpauseImage():
    stream = cStringIO.StringIO(getpauseData())
    return ImageFromStream(stream)

#-------------------------------------------------------------------------
def getFindData():
    return zlib.decompress(
'x\xda\x01~\x03\x81\xfc\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x14\
\x00\x00\x00\x14\x08\x06\x00\x00\x00\x8d\x89\x1d\r\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x035IDAT8\x8d\xad\x93]L[e\x18\x80\x9f\xefP(\
\xd4\xda\x15\x19[\x05c\xdb\xb1\x9d\xa0VZ\x13\x01\x95\x90\x1c\xaf\xb81\x86e\
\x06\xe2XBC\xb8\xe1\x8e\xc4\xc4\x90\x86h\xea\x05\xc6dK\x0c!\xa1z\xa3q\xc9\
\xbc\xf0\xc2\x9a\x90p\xd3hM$\x04Q\x06\xf6\x00\xd2\xa1\x1d\x13C\x0f\xe8<t\xf3\
tk\x0bx\xc1\xda\xd0v\xc3\xc4\xf8&o\xbe/\xdf\xcf\x93\xe7\xfby\xe1\x7f\x0e\xf1\
\xa0\xf5\x02\xdd\xff\x91\x11\x06\x96J\x81_\x06\x83\xc1n\x8f\xc7\x83\x10\x87C\
B\x88\x7f\xed\xab\xaa\xca\xc8\xc8H\x188\x9f\x07\x9a\x1e\xb4v\x8f\xc7CGGGaC>g\
ff\x98\x9e\x9e&\x16\x8b\x01\xe0t:\xe9\xeb\xeb\xa3\xb3\xb3\x13I\x92\x00\xecGu\
\xa5BG\x92\xcartt\x94\xde\xde^\x96\x96\x96\x90e\x99\xb6\xb66\x84\x10\xf8\xfd\
~\x86\x86\x86H\xa5Re\xe7\xcf\x1b"\x84@\x92\xa4\x82Y \x10 \x1c\x0e3\xfc\xd6\
\xdbdN\xbf\x88\xe9\xb1ZD\x85\x19\xe7~\x9a\xcb\x17\xfc|\xfe\xf1\x15\xc6\xc6\
\xc6\xca\x80\x0f5\xdc\xdc\xdc$\x14\n\xd1si\x80\xbb\xee\xd7hn}\x99\x8e\xf6\
\x16\\\xb2\x8b\x93\xees\xfcx\xe7\x14\xfd\xc3\xefa6\x9bKy\xde"\xc3\\.\xc7\xee\
\xee.sss\xb8\xddnLO\xbfD{\xfb9\xce?k\xa7R\x82\xefw\xe1\xa7;\xd0\xea<\xc9\x0f\
\xdf-\xd3\xd3\xd3\xc3\xfc\xfc\xfcQ\xa0\xbd\x00\xcc\xdb\xed\xec\xec\xb0\xba\
\xba\x8a,\xcbT>Q\x8fTog\x0fH\xe7\xe0\xe7\xbf\x0f\xbfE\x85\xb9\x92\xc63Or\xaa\
\xcaUjx\xb3\xc8\xd0l6\xd3\xd2\xd2B*\x95"\x1e\x8fS[\xb3G"\r\x13\xbf\x81I@\xb5\
\x80j\t$\x01\xae\xfa\x1a\xee\xdd\xca\x96\x027\xa4\xa3@\xc30\x88D",//\x13\x8f\
\xc7q\xeei\xd82)\xcc\x02\xaa\xc4!\xd4\x04\xec\xa7\xef\xe1\xb1\x1e0;;{\xfc+\
\xdbl6\xba\xba\xba\x10B0>>\xce\xed\x9d$\xcfo\xc7\xb8mu\x90y\xbc\x9e\xdc>\x9c\
\xae<\xe0\xac\xf5\x80uu\x81\xa9\xa9)8\xee\x1ff\xb3Y\xb6\xb7\xb7\xd14\x8d\x89\
\x89\t\x82\xc1 \xd9\xcc}\x9e\xb3\x1e\xf0L\xfa\x16\xcdw\x7f\xa1\xf6\xaf_\xd16\
n`\xd1\xb7x\xa7\xd5\xcd\x05\x9b\xc9\x07\\\x07N\x94\x19J\x92\x84\xa6i\x008\
\x1c\x0eB\xa1\x10\x03\x03\x03\xc8\xb2\x8c\xd3\xe9\xc40\x0c4MCUU\xc2o\xbc\x80\
\xffL\x05\xaf\xb4?\xc5\xd9\xeb\xbf\xfb>\xf8#\x1b\x05\x94|-\x7f\x13\x89D\x14E\
Q\n\xf0\xa3\xb5\xbb\xb8\xb8H4\x1aE\xd7u\x14E!\x1a\x8d\x92\xf8\xec2\x1f\xbd\
\xee\xa3\xba\xc6\x82:\xa3r\xed\xc6\x9f\xbc\x9f\xccD\x8b\x0c\x93\xc9$\x0b\x0b\
\x0be\x17\r\xd0\xd4\xd4D]]\x1d^\xaf\x17\x8b\xc5\xc2\x9bW\xafr\xe5\xeb\x18\
\xfef\x07\xd5\xd6\xfb\\l\xae\xe2Z2\xa3\x14\x01\x1b\x1a\x1ahll|(0\x1f\x89D\
\x02]\xd7\t\x04\x02\x0c\x0e\x0eR\x93\xcb\xf2j\xed>_$2l@\xb1a\xfe\x98\x8f\n]\
\xd7QU\x95\xad\xad-&\'\'\x01>|w5\xad|Z\x85/\x96!\nt\xe7\t\x9f\xf4\xf7\xf7\
\xfb].\xd7\xb1\xc0\x95\x95\x15\xd6\xd7\xd7Y[[\xbbi\x18\xc60\xf0U\xe9\x9a<\
\xf0\x04\xe0;\x96V\x1c\xdf>j\xe2\x1f<\x82\x1c\x022q\xf9h\x00\x00\x00\x00IEND\
\xaeB`\x82~=\xa1\xcc' )

def getFindBitmap():
    return BitmapFromImage(getFindImage())

def getFindImage():
    stream = cStringIO.StringIO(getFindData())
    return ImageFromStream(stream)

#---------------------------------------------------------------------
def getClearData():
    return zlib.decompress(
'x\xda\x01\x06\x04\xf9\xfb\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\
\x14\x00\x00\x00\x14\x08\x06\x00\x00\x00\x8d\x89\x1d\r\x00\x00\x00\x04sBIT\
\x08\x08\x08\x08|\x08d\x88\x00\x00\x03\xbdIDAT8\x8d\x9d\x94]L\x9bu\x14\xc6\
\x7fo[\x862\xb4|u\xb0"k\x87\xc3\xd6\x89\x02\xbe\x0e\xe7\x1a\xda.\xceM\xb6l`\
\xb2xE\x14/\xdc\x85\xce\x88\x86\x8b\x9ai\xe8\x85\xc9\xd0\x185\x8b\xba\xc4x\
\xd11\x13\x0738\xcd2\xbc\x98\xd0\xb2,q\xed:\x98Uh\x03\x83\x96\x0e\xc6`|\xd3\
\xd2R\xc6\xebEY\x19\xac\xc6\xe8\x93\x9c\xe4\xe4\xe4\xfc\x9f\xf3\xfc\xcf99\
\xb0\x8a\xaa-\x1a\xbdT\xbe\xeb\x90\x04t\x01J\xfe\x07\xe4\xf7\xf9\x8dG\xeb>\
\xd7?o|\x15I\xae\xcc\xbb\xe1\xbd\xac\x07\x9a\xff+\xa1"Y\xb0\xe8\xe9\xbdx\xba\
\xed\xd5\xb7\xfcNSkk\xabC\x10\x04\xee\x19\x90\xd4\xb7X,x<\x9e5\x84\xf6\x80\
\xdf[\x9d\x93_\x0c\x80\xe6\xa9\xfd\xdc\xf2;\xad\x15\x15\x15\xbb\xd7?NfJe\xbc\
C\nQ\x14\x01p\xbb\xdd\xe7~\xbdp\xeaK\xd1p\x18\x00\xe5\xa6\'\xd9\x98\xad3\xab\
T*S{{{R\x95\x00eeek\xe2\n\x80\x8cM\x9b9\\{$\xf0\xa3\xed[\x9b\xaf\xd7U+O\x7f\
\x1c\x80\xcc\xc2\x03\x84&|u\xdf4\x9dq$k\xcd\xa0\xc7Mcc#\x06\x83a5(\x8a"\xef}\
\xf25\xbf\x0cE\x01L[\xb7=+\xbd\xfd\xd1Ei\xdf\x1b\xcdR\xe1\x9e\x93\x92\xeca\
\xb5\x04h\xdanK\x00\xaf\x03\x1d\xc0Om\xb7%DQdaa\x81H$\x82\xd1h\x04@\x06\x10\
\x8b,\x12\x9e\tq\xb6w\xc61\xd8\x7f\xcd>4\xd0\x95((\xcb1\x00\xd8*s\x85\xc1\n\
\xd3+\xb6\x9d/[\xcc@ue\xae`\x02\x98\x9a\x9aJ|w\x950\x1a#<\x1b"<\x1b\x02\xb0\
\xba:\x9b\x12\t\x1b34\x94\xef:d\xaey\xe7{\xed|\xe6A\xfa\xa6s\x91g=\x07`\x05\
\x18\x1b\x1bC&\x93%\xf2\x15q\xc2E\xc2\xb3!\xe4\n9@\xf7h\xd0\xe3\xcf\x1b\xb8\
\xa45\x96\xef\'\xf3\x11=\xde@9\xbe\x910\xe9\xd2(\x1f\x96\x9c\xe3\x1aW9\xfd;\
\xa5\x00\xc5\xc5\xc5\x0f\x0e%\x16\x8dq\xb4R\xaf\x01\xac9\xaa\xfc\xda\x17\xf7\
\xd5\xb0\xad\xf8%&\xe7%F\xee\xcc\xa1\xcf\xea\xa1\xb4\xe07vk/!K\x01c\x01\xb8\
\xfcd\xb8\xdd\xee\x92\xce\xce\xce\xebf\xb39\xa1P\x10E\x11\xb7\xdb\xad\x04\
\xa6\x8f\xbcu\x9c\x1d/\x1cdb&\xccl(Jv\xaa\x93\n\xb5\r]\xbe\x87\xd00,\x85@U\
\x0e\x8b\xb3p\xa5\x13\x8e\x9d\x04\x97\x1f;`5\x99L\x0e\x87\xc3\x81\\\xadVSX\
\xb4=\x1a\x0c\x0cj\xc5\x1d{J\x1f\xdb\xa2\xa7h\xf3\xcf\x1c(\xf9\x98\x9d\xaa\
\x1f\xc8N\x1f\x8b\x97\x96 5\x0b\xe6\x83\xf0P&\xa8\x94PS\x05\x86g\xd0^\xef\
\xa1\xf6\xaa\'P\rDd\x007S\xfa\x01\xac\xadg\xbf\xa2J\xb7\x17\xf3V+\xb9\x8f\
\xf6!\xc8a9\x06\xd22\x08)\x10\x99\x88\x93\xce\xf9Wj\xdc\x05\xe7e\xe8\x1d\xc6\
\x0ft\x03\xd3\n\x80\xc5\x94Ex\x8d\xc0\x9d\xa6a\x14a\x98\xb9\t\x82\x00\xa99\
\xb0\x14\x06E\x1a\xc8\xe4\xf1Xl\x0e\xc6\x97\xc1y\x01\xde<\x81\x1f\xb0\x03u:\
\x9dn\xc6\xe7\xf3=p\x1c\xfc\xd1I\xb4K!\x90\xa5\xc4\xc9\xeeF\x01\x01\xfe\x1a\
\x84\xa1QH\x13\xe0\xb33p\xa5\x8f\xf8\x8a\xb9\\\xa7\x06\x06\x06\xa8\xaf\xaf_\
\x9d\xb2z\\\x8dz\\\x8d\x1b\xb7\xbf\xeb\x0f\xb4Od\xc1\x86LX\x18\x05\xd9\x06\
\xf8\xf3\x06|\xd7\x06\xcd\x1d\xd8W\n\xdbV\x94M\x8f\x8c\x8c\xd0\xd5\xd5E0\x18\
$\x19\xde=V\x85\xe4\xfb\x14\xa9\xff\x04\xd2\xf9\x0f\x90\xb6\x17p\xef\xe0v\
\x00%\x92$!I\x12===\xb4\xb4\xb4`\xb1XHKK[]\x9bu\x84\x1au\x06\xfe\x8b\xef\xc3\
i\'\x1c?\xcf4P\xdd\xd0\xd0\xb0\xe68LNN\xe2\xf5z\xf1z\xbd\xff\xa8\xec~|\xa1\
\xcfK\xa8\xd2\xfck\xf6:\xfc\r9\xd2v\x11t\xaa\xfb\xd8\x00\x00\x00\x00IEND\xae\
B`\x82)x\xd5\xa4' )

def getClearBitmap():
    return BitmapFromImage(getClearImage())

def getClearImage():
    stream = cStringIO.StringIO(getClearData())
    return ImageFromStream(stream)

#----------------------------------------------------------------
def getFindDataData():
    return zlib.decompress(
'x\xda\x01\xad\x02R\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x14\
\x00\x00\x00\x14\x08\x06\x00\x00\x00\x8d\x89\x1d\r\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x02dIDAT8\x8d\xd5\x94=O\x14A\x18\xc7\x7f3\xcf\
\xec\xdc\x02\xc7\xcb\x1d!^\xe2y\x90\x0b\x98\x00F\x8d\x85\xa1\xa0\xa1\xa0\xe3\
\x13\xf0\r\xac\xa4\xb2\xb5\xa1\xd7\x8f`aKbN+#\x06l\x8c!\xf1\x8c\x98\x18\x13Q\
H\x88\x14\nH\xdcEnw.g\xb1\xcb\xbdx\x10-\xf5I\x9e\xcc\xced\xf67\xff\xe7?\x93\
\x07\xfe\xf5P\xe7\xac\xdf\x03\x86\x80\xed\xbf`\xdc\x07\x8eN\'\xe6\x8c\rwGo\
\xcc/\r\x97&\xb0\x9ef\xf8\xd28\x00"\x1a\xebI+\x8dP}^a\xe3\xe9\xa35`\xfd\\\
\xa0\xd7\x93]\xba\xbap\x8b\x81\xdc \xbd\x99\x06^\x1c\xa0\xb5j\x81j\x87\xd8\
\xfe<\xbd\x85\x12\xbb\xef_w\xa9\xe9\x02\x0e\x16\xcaC\xb6\'\x9b\xc0\xe3\x80\
\xf9R\x83\\n\x08\xa5\x12wr\xb9\x8b\xbc|\xfb\x81\xd83\x88\xe8?\x03\x95\x02\
\xd1\xaa\xf9=22B\xa1P@)\xd5L#\x82\xf6\xa4\xb9\xaf=~?bPk\x85H\xfa\xa3\x11\xac\
\xb5\xf8\xbe\x8f\xef\xfb\x04A\xc0\xfe\xfe>\xae\xee\xb0\x9e\xa0S\x85\xe5r\xf9\
\\\x85\xd7\xb5R\x18\xd1\x88(L6\xc7\x93\x8d\x8f\x88|\xc2\x18\x8d\xed\xeb\xc7\
\xcf\x0e\x90)\x8c\xe3\xb5)\\\\\\dyy\xb9\x13X,\x16\xd9\xdd\xddE\xeb\x04\xa8E\
\x91\xf1}d`\n?c\xf0\xad!c\x85\x8cg\xb0V\xb0F#:Q833C__\x1fa\x18\xb6J^XXH<P\n#\
\n\xa35\xd6;\x85H\xd7\x931FH\xef\x898\x8e\x19\x1b\x1b\xeb\xf4\xb0X,&\x0b\xfa\
\xb4d\xddR\xd4\x06\xf3\xd2\x14\xad\x9a7_\xaf\xd7\x99\x9c\x9c\xec,yzz:U\x08F4\
\x88\xeaR\xe6\x19\xc13\xba\x03\x06\xe0\x9c#\x8e\xe3N\xe0\xce\xceN\x9bB\x05\
\xa2\x13\xaf<\xc1z&\x85\tFt\x07\x0c\xe0\xf8\xf8\x98 \x08:\x81\x9b\x9b\x9bM\
\x0f{\xac\xe6 tT\xdf\xed\x11\xfd<!\xae\xd5(\xe6}|\x01\x17E|\xde\xfa\xc2\xfe\
\xb7#^<^\x01 \x9f\xcf\xb3\xb5\xb5\xd5\t\\YYi\x9e8U\xe8\xe5\xcah>\x9d588\xf8\
\x81\x8b\x1du\xe7p\xce13>\xcc\xd7 \xe6\xd9\xc3;T*\x95\xf5\xd5\xd5U\xb6\xb7\
\xb7\x81\xeens\xedBi\xe2\xcd\xe5\x9bs\x1c\x1e\x9dP\xabE\xb8("\x8eb\\-\x1d\
\xa3\x08\x17\xc7\xd0\x80p\xef\xd5\xda\xec\xec\xec\\\xb5Z%\x0c\xc33\x81\x00\
\xb7IZ\xd7\x9f\xe2;\xf0\x80\xb6\xd6\xf5\x7f\xc4/f\x19\xac\x93j?\xc8\t\x00\
\x00\x00\x00IEND\xaeB`\x82J\x808\xd6' )

def getFindDataBitmap():
    return BitmapFromImage(getFindDataImage())

def getFindDataImage():
    stream = cStringIO.StringIO(getFindDataData())
    return ImageFromStream(stream)

#------------------------------------------------------------------
def getDeleteAllData():
    return zlib.decompress(
'x\xda\x01\xf4\x03\x0b\xfc\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\
\x14\x00\x00\x00\x14\x08\x06\x00\x00\x00\x8d\x89\x1d\r\x00\x00\x00\x04sBIT\
\x08\x08\x08\x08|\x08d\x88\x00\x00\x03\xabIDAT8\x8d\xad\x94KH\\w\x18\xc5\x7f\
w\x1c\xd3h\xccLZ\xab`\xab\x8e$ }h\x15\x8b\xc5\x07\xf5\x11\x8a\xdaVd\xa0\x03!\
-i#.\xb2\x08\xd5Yt\xdd\xa9RJ\x17B\\tS\xa4\xd2J\x1b\x86\x12\xd2\x84ta\xb3\xf0\
\xd1\x14"\x0c\x94{}\\\'\xf55w\x9cI\x13\xd4\xc6\xd1\x19u\x1c\xe7~]\x84\xf8B\
\xac\x8b\x9e\xe5\x9f\xc3\x8fs\xfe|\x1c\xf8\x9f\xa5\x1c\xc3S\x02\x94\x02\x05{\
\xdeT\xe0\xf6q\x81\x0e\xa0\x0ep\x16\x17\x17\xd7\x95\x97\x97\x9f\xa9\xa8\xa8\
\xc0f\xb3\xed\x18t]\xa7\xbf\xbf?\x10\x08\x04\x9c\x80v(\xb0\xa4\xa4\x04M\xd3\
\xae544\xb8].\x17\x15\x15\x15\xac\xae\xae2::\xca\xe8\xe8(\xa1P\x88\xb2\xea\
\x06\x9a\\\xad\xbc\x98n\x92\xa1\xc4\xe8\xea\xea\xe2\xc6\x8d\x1b\x97\x81\x1f\
\x0eK\xfb\x89\xdb\xed\x96\xbfff\xe5\xf3\xaf\xae\xc9[\xd5\xf5\x02Hcc\xa3\xb4\
\xb6\xb6\n V\xabU\x1c\x0e\x874:/\xca7\xdf]\x17\xc30\xc4\xe5r\tP{\x18\xd0\xe3\
\xf5z\xa5\xb6\xee\xbc\xe4\xe6\xe6Jgg\xa7LMMI8\x1c\x96\x96\x96\x16\xf1x<244$\
\x1d\x1d\x1d\xe2p8\xc4j\xb5\xcaG\x97>\x16\xc30\xa4\xb8\xb8\xf8\t`?\x08\xec\
\xb8|\xe5S\xb9\xf9\xcb-\xb9z\xf5\xaaLLL\xc8\xc4\xc4\x84\x8c\x8d\x8dIvv\xb6\
\x0c\r\r\x89\x88\x88i\x9a\x92H$drrR\x8a\x8a\x8a\xa4\xbb\xbb[\xdcn\xf7NJ\xeb\
\x1e\xa0:8|\x8f3/\xbf\xc2\xfb\xcd-\xf8\xfd~l6\x1b\xc1`\x90x<NUU\x15\xd1h\x94\
\xd5\xd5U\x1e>|\xc8\xc6\xc6\x06\xed\xed\xed\xbc\xfeF\x19-\xcd\xef\x02\x8c\
\xec\x03\xd6\xd6\xd6\x8c\xf8\xfe\xd4\x88\xcaI\xee\xfafhu\xd623\xfd\x80`0\x88\
\xd3\xe9d||\x9c\xcd\xcdMRSSQ\xac\'\x08/\xad\xf18f\xe1N\xefM\x96\x97\x16\xd5D\
d\x96\xdb\xbf\xfe\xb6/!\xebk\x11\xb5\xe9\xcd\xfc\xd2\xbb\xea\xdf|{\xc7G\x9e\
\xdd\xc2\xd9\xd7\xca\xa8\xaa9\x8f\xf6\xc0 \xfcx\x99\xb9\xf0\x12O\xa2\x9b\x9c\
\xb2gaM=\xc1bx\x0e@\xbd\xf4\xe1E\x9a\xde.\xc2\xf2\x0cVWW\x03\x10\xd8\x8e.\
\xd3P\x9a\xc3\xd6\xb6I(n\xe3\xf7\x07+\xf4\xde\xbe\xcf\x80o\x0em\xfe\x1f\x96V\
\xa2\xa4$7\xc9\xb2\xaeQ\x9e\xff\x1c\xd9\'\xe3\x00jT\xc9\xa6\xfd\xcb\xeb{\x13\
\n\x80\xaa\xeb\xba\xb3\xad\xad\x8ds\xf99\xf84?\x8f\xcc(\x11\xdb6\xa6\xb9\xc5\
\xe9Si\xbc\x94}\x16[F:v\xbb\x9d\xf4\xf4t~\xfeq\t@\xf5x<4\xfb|\xfb+\x03\xc3\
\xba\xae\x03\xf0\x82\xfd4\xd5e\xaf\xf2\xe8\xd1\xf3,..\x92L&wL\x8a\xa2\xa0(\n\
\x89D\x02\xc30\x08\x06\x83#\x03\x03\x03\xd8\xed\xf6\xdd\xca{\x12\x1ev\xa3\
\xfb\xa4(\n\x16\x8b\x85D"A0\x18\x0clmmQXX\x88\xdb\xed\xde\x05\x168\xf2\xe9\
\xf9\xec\xbd\x88\xae\xeb\x81\xff\x02Z,\x16\x14EA\xd34\x005\x16\x8b\x91L&\xc9\
\xcc\xcc\xdc\x0f\xcc\xca=\x07\x10\x98\x9c\x9c<V\xc2\x99\x99\x19\x005\x12\x89\
\xd0\xd7\xd7\xc7\x85\x0b\x17v\x81\xc3#\xf7x\xe7\x83+\x00\xdf\xf7\xf4\xf4\x1c\
\tLII\xc14M\xa6\xa7\xa7\x01\x86#\x91\x08555\xa4\xa5\xa5\x91\xf2\xcc42\xf2\
\x07\xbd}?\x11\x8f\xc7\xb5\xd9\xd9\xd9\x82P(TZ__O4\x1ae}}\x1d\x11\xd9\x01\
\xce\xcf\xcf\xe3\xf5z\x19\x1c\x1cT\x81\xaf322\xe2\xba\xae\xa3i\xda\x91\x03\
\xeb\xc9\xc9\xc9\xf9\xa2\xb2\xb2\x12\x8b\xc5\x82i\x9a\x18\x86\x81\xdf\xef_\
\x89\xc5b\xc3\xc0-\xe0V^^^daaa\xf7;\x8e\xec\xf6tAJy:\xb8*\x10\xe0\xc0\xa0\
\x1e\xd4\xbf\x8f2\xb4\xaa\'M\xfd\x8d\x00\x00\x00\x00IEND\xaeB`\x82\xae\x99\
\xe3\x83' )

def getDeleteAllBitmap():
    return BitmapFromImage(getDeleteAllImage())

def getDeleteAllImage():
    stream = cStringIO.StringIO(getDeleteAllData())
    return ImageFromStream(stream)

#============================================================
def getCloseAllData():
    return zlib.decompress(
'x\xda\x01\xca\x035\xfc\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x14\
\x00\x00\x00\x14\x08\x06\x00\x00\x00\x8d\x89\x1d\r\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x03\x81IDAT8\x8d\xcd\x94Kh\\e\x18\x86\x9f9\
\xe7\xcc\xb1\x99\x99d\xa6\x89\xb9\x8c1iD\x04\x85\xe6\x86i\xc7\xa0N\x07k\x181\
\xd2\n\xadU\x0c&\xb1.\xb2\x10AE\xaa\xa9\x0b\xc9\xc6\x85\x8b EpSHD\xdc\x18DSB\
!\x0b\xa9\xb1\x15\xaaA:Y\x14\x8c\x89\xb94Is\x99\xdb9I&\x99s\xfd]\xe4\x82\xa3\
\xd6\x82\xb8\xf0\x85o\xf3\xff\xdf\xf7\xf2\xbd\xfc\xef\xfb\xc3\xff\x1d\xf2\
\xdd\x1a\xda\xdb\xdb\x89D"\xa4R)666\xfe=a(\x14\xa2\xb3\xb3\x93\x86\x86\x06\
\xca\xca\xca\xc8\xe7\xf3(\x8aB:\x9d\xfeGB\xcf\x1d\xceO\x021@\x03\x06\xfb\xfb\
\xfb\xe7\xc7\xc7\xc7\xc9d2\x8c\x8e\x8ev\x01M\xbbw\x1f\x03\xfa\xdd\xb6>y\xb8\
\xb6V\\:\xdf+>9\xfb\xaa\x08\xfa|Y\xa0\xb1\xaf\xaf\x0f`\xe0\x99G\x1e\x16_\x9d\
\xed\x16}\xf16\x01\xdc\xb8#\x8b\xaa\xaa\xc4\xe3q\x80+\xc3\xe7\xde\x11\xfa+\
\x1db#vL\\k}L\x84\x14%\x0b|}\xa6\xb1A,\x9d\x7fW\xdcn;.\x16\x8e\xb6\x88\xd3ee\
\x028\xf6G\x1e\x05 \x18\x0c\x12\x8dF)--\x05\xd0\xf4\xd99\xa4d\x12!\x04\xf5\
\xaa\xcap\xfd\xe1\xd0\xe7\x88\xe7?8\xfe\x14\xce\xf5\x1fq\xf4u\x1c\xd7A\xb3\
\xad\x1d\x12E\xc1\xb6m\x00\xe4\x8a\x8a\n\xa2\xd1(>\x9f\x0fEQ\x98\x98\x98X\
\xf95\x9b\xed>\x15,AA`\xd9\x0e\x07e\x99\'\x8b\x038K\x8bX\xba\x8e\xe58\x0c\
\xa5\xd2\\L\xa6\x12\xf1x\xbc\xb7\xa6\xa6\x86\xe5\xe5el\xdbFr]\xb7@zOO\xcf\
\xd8\xcd\xe5\xe5\xeeg\x13\t\xd6\xb6\xf3\xe4-\x0b\xc3214\rC\xd31l\x8b\xa1T\
\x8a\xf7\x17\x97\x12@\xccu]\xbc^\xef\x9e:d\xc30\x08\x87\xc3\xf8\xfd~\x14E\
\xc10\x0c\xee\x0f\xf9&~\x98\x9e\x8d\xc9\xc1\x92\xbaG\xbd^L\xcb\xc2r\x1cL\xc7\
!c\x99\xbc~k\x11S\x88\x97\xfa\x9f889\x93\xf3`\xca\x07\x90e\x99\x95\x95\x15$\
\xc7q\x98\x9a\x9a\x02 \x93\xc9`N\xff\xcc\xe5\xef\xaf\x0f\x9cz\xf0\x81\xd8\
\x1b\xcd\x8d\x18\x1e0l\x1b\xc3\xb60m\x0b\xd5u\xb9\x10\xae$ y\xbey\xfbZ\xb6\
\xf1\x85\xa2y\xfc\x99YTU\x05v}\xa8\xaa*\x91H\x84Vu\x81\x8f\xbe\x9d\xebz\xba\
\xfa\xbe\xc1O[\x8f\xb053\x87\xb5\xb5\x85\xe3\xba\xfbe\xbb.\xae\xeb2i\x18\x9c\
[Kk\x9bB\xd4\x9d8\xa4\xeacZ\x11\xba\xae#\x01\x98\xa6\xc9\x8b\xd59\xe25\x12@w\
W]\r\x1bS\xbf\x91\xdf\xdc\xc4\xb4m\x86\xb3\x1a\x9d\xb7\x16\xc9\x98&\xa6mc\
\xda6\xb5\x1e\x0fG\xefQC@S\xa0DA\xd7w\xfc-\xed=F\xa5_\xa2:\\\t\xa0e5\x9d\xed\
\xcd\x1c\x86eqI\xd3\xf90\x99NL\x9b\xd6\x9bo\xad&\xc9Z\x16\xa6cc:6\xab\x8e\
\xc3nb\xfe\x8a\xa1\xd7Z\xf8\xa5\xb7\x15\xa0\xb1D\x91\xb3\xdd\xa1\x12\x11\xf7\
\xfb\xf6\xd2\x10lkk\x03\xe8\xaa\x90$q\xc6w@\x1cQ\x15\x01\x0c\x8ct\x94\xf3r\
\xbd\xaf\xd0\xd8\x00\x0b\xd9m\xea+\xbc\x8ct\x94O<\xf7E\xb2nP[\x8f\x01\xda\
\xc5h\xf1X\xcb\x85\xab\x04\x02\x01\x02\x81\xc0gUUU\xdf}\xb9\x95o\x02\xb4\x91\
\x8e\xf2\xb1?/\xb6O\xd8wy\x92\xc7\x0f5\x030\xd2Q\xae\x03\xc3\x00+\x0b\xf9\
\x82\x81\\.7\x7f\xe5\xbd\xd3\xf3\xe6\xed\x9f\xfeVi\xc1o\x13.\xf6roQa\x83i\
\xb8\x14?\xd4\x8c,\xcb\xfb\xa5\xcd\xdc\xc45\xd6\x91\xa4\x9d\xf1\xd5\x9c\xc3Z\
\xae0 \xff\x19~\x07e\xb2\x9e\xc2p\x7fHA\x00\x00\x00\x00IEND\xaeB`\x82\xbd\
\xf2\xc5\xc5' )

def getCloseAllBitmap():
    return BitmapFromImage(getCloseAllImage())

def getCloseAllImage():
    stream = cStringIO.StringIO(getCloseAllData())
    return ImageFromStream(stream)

#==============================================================
def getCloseOneData():
    return zlib.decompress(
'x\xda\xeb\x0c\xf0s\xe7\xe5\x92\xe2b``\xe0\xf5\xf4p\t\x02\xd2" \xcc\xc1\x06$\
{;ey\x81\x14K\xb1\x93g\x08\x07\x10\xd4p\xa4t\x00\xf9\x13<]\x1cC,z\xdfNr\xe4m\
0\xe0a8\xcf(4\xa1\x81EE\x81\x91\xd3\xc3\x81\t\xc8l\xf1\x9c1\xc5S\x82\xdf\xeb\
\xd2\x94\xd6\x92?\x1ee\x9e\xf2\xd9\x9b\xbd/\x8bI\xedOd`\xda\xc0<w\xa5o\xd0\
\xed\xac\x16\xc6\x13B\x81\x9e\xe9S\xcf\x7f*+\x9c\xd1/\x18\xe1\xa3\xe7\xbd]\
\x8fMA\x94\xc5\xaal\xfd\x19\xe5\xb5\xd3\xee\xaea\x8d|\xb4SC\xbc\x8c\xb1lY\
\xe8\xa5\x97\xae\xdf<W\x9d\x7f6/2s\xd9\xfcsn\xfa\x07\xbc\xdc\xd7ox\x1c\xe5\
\xb1\xb29.\xeb\x9dt\xce\x95B\xa6\xd3\x87\xbd\xe2\xde\x06MY\x00t\x1b\x83\xa7\
\xab\x9f\xcb:\xa7\x84&\x00\x0f\xfeK\x1f' )

def getCloseOneBitmap():
    return BitmapFromImage(getCloseOneImage())

def getCloseOneImage():
    stream = cStringIO.StringIO(getCloseOneData())
    return ImageFromStream(stream)



